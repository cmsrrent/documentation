0 - overview commands
	git --help # all git helps commands
	git help <command> # help on a specific git command e.g. git help push
	git config --list # shows local config e.g. username, email address, etc...
	git config --global user.email "myemailaddress@here" #add email address to local config
	git config --global user.name "your name" #add username to local config
	git remote rm origin #remove link from local git to remote repo (helps when you cant push to repo)
	git log --oneline #view log of commits just single line
	git log # view all commits on the current branch
	git status # status of working directory
	
1 - initialise a new local directory for git
	launch gitBash on PC in local directory
	cd to local directory within gitBash
	git init # initialises local repo
	git remote add origin https://github.com/cmsrrent/sdetu-training.git #URL specific to project

2. Push local repo to remote repo (Github)
	from GitBash relevant directory for project
	git add -A
	git commit -m "message here"
	git push -u origin master
	git status

3. Clone a public repository to your local machine	
	make a local directory within Workspace folder
	go to the new directory within gitbash
	git init #initialise git
	from github get the URL of the repo you wish to clone e.g. https://gitHub.com/timothyshort/sdetu-training.git
	git clone https://gitHub.com/timothyshort/sdetu-training.git #this will clone all files from github to local

4. Create a new branch
	git checkout -b <branch-name> #create a new branch with name provided and check it out immeditely
	git branch <branch-name> #creates new branch with name provided but doesnt checkout into it

5. Push updates to remote repo (GitHub)
	git status #this shows which files haven been modified locally that aren't synched with the gitHub repo
	git add -A #this pushes changed files into the staging area
	git status #this shows which files are now set to staging for commit
	git commit -m "Modified some stuff" #this commits changed files to local git with a comment
	git status #this shows status of your branch with commits ahead of master
	git push origin master #pushes changes into gitHub, changes should be visible in gitHub

6. Apply file changes directly on gitHub
	go to gitHub and edit a file online
	go to gitBash
	cd to appropiate local directory
	git pull #this will pull down change from Github to your local repo
	
7. Git Ignore - Files we may use locally but want excluding from remote repo (e.g. log files)
	Go to local directory and type 'touch .gitignore' #This will create a .gitignore file
	Edit .gitignore file and add filenames, directory's or wildcards for files that you want ignored
	e.g.
		log.txt
		/dir1
		*.logs

8. Remove files from staging area
	git rm --cached "filename" #This takes the file out of staging for further local amends
